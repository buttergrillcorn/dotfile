#+TITLE: Dotfiles Configuration
#+AUTHOR: James
#+PROPERTY: header-args :mkdirp yes :noweb yes
#+STARTUP: overview

* Shared Configuration

** Colors
#+name: colors
#+begin_src conf
# Fallback color scheme (Tokyo Night inspired)
set $bg #1a1b26
set $fg #c0caf5
set $accent #7aa2f7
set $urgent #f7768e
set $primary #7aa2f7
set $on_primary #1a1b26
set $primary_container #3d59a1
set $on_primary_container #c0caf5
set $secondary #9d7cd8
set $on_secondary #1a1b26
set $surface #1a1b26
set $on_surface #c0caf5
set $surface_variant #292e42
set $on_surface_variant #a9b1d6
set $surface_dim #16161e
set $error #f7768e
set $on_error #1a1b26
#+end_src

** Variables
#+name: terminal
#+begin_src text
foot
#+end_src

#+name: font
#+begin_src text
JetBrainsMono Nerd Font
#+end_src

#+name: wallpaper
#+begin_src text
~/dotfile/wallpapers/default.jpg
#+end_src

* Sway

** Variables
#+begin_src conf :tangle packages/sway/.config/sway/config
set $mod Mod4
set $term <<terminal>>

# Fallback colors (defined first, will be overridden by matugen)
<<colors>>

# Source matugen colors if available (overrides fallback)
include /home/james/.cache/matugen/colors-sway
#+end_src

** Input Configuration
#+begin_src conf :tangle packages/sway/.config/sway/config
input type:keyboard {
    xkb_layout us
    xkb_options ctrl:swapcaps
}

input type:touchpad {
    tap enabled
    natural_scroll enabled
    scroll_factor 0.7
    accel_profile adaptive
    middle_emulation enabled
    dwt enabled
}

input type:pointer {
    dwt enabled
}
#+end_src

** Output Configuration
#+begin_src conf :tangle packages/sway/.config/sway/config
output eDP-1 mode 1920x1080@60Hz position 0,0
#+end_src

** Appearance
#+begin_src conf :tangle packages/sway/.config/sway/config
gaps inner 5
gaps outer 0

default_border normal 3
default_floating_border normal 3

# Title bar format showing window info
title_align center
for_window [all] title_format "%title"
titlebar_padding 5 2

# Window colors: border, background, text, indicator, child_border
# The indicator (4th value) shows where new windows will appear
# The child_border (5th value) is the actual border color you see
client.focused $primary $primary $on_primary $accent $primary
client.focused_inactive $surface_variant $surface_variant $on_surface_variant $surface_dim $surface_variant
client.focused_tab_title $primary $primary $on_primary $primary $primary
client.unfocused $surface_dim $surface_dim $on_surface $surface_dim $surface_dim
client.urgent $error $error $on_error $error $error
client.placeholder $surface_dim $surface_dim $on_surface $surface_dim $surface_dim
#+end_src

** Behaviour
#+begin_src conf :tangle packages/sway/.config/sway/config
# Focus follows mouse
focus_follows_mouse yes
focus_wrapping workspace

# Don't auto-focus certain windows
no_focus [window_type="notification"]
no_focus [title="Picture-in-Picture"]

# Mouse bindings - Mod+drag to move, Mod+right-drag to resize
floating_modifier $mod normal
#+end_src

** Window Rules
#+begin_src conf :tangle packages/sway/.config/sway/config
# Picture-in-Picture windows
for_window [title="Picture-in-Picture"] floating enable, border none, move position 10 ppt 10 ppt, sticky enable

# Floating scratchpad terminal
for_window [app_id="floating-foot"] floating enable, resize set 50 ppt 50 ppt, move position center, move scratchpad, scratchpad show

# Floating applications
for_window [app_id="blueberry.py"] floating enable
for_window [app_id="blueman-manager"] floating enable
for_window [app_id="pavucontrol"] floating enable
for_window [app_id="fcitx5-config-qt"] floating enable
for_window [class="Bitwarden"] floating enable
for_window [app_id="LanMouse"] floating enable
for_window [app_id="org.kde.kdeconnect.*"] floating enable
for_window [class="prismlauncher"] floating enable
for_window [app_id="nm-connection-editor"] floating enable
#+end_src

** Auto-start
#+begin_src conf :tangle packages/sway/.config/sway/config
# Wayland essentials
exec swaybg -i <<wallpaper>> -m fill
exec mako
exec waybar

# System utilities
exec fcitx5
exec light -N 5
exec wlsunset -l 51.5 -L 0.1
exec ~/.local/bin/start-swayidle.sh

# Tiling enhancements
exec_always autotiling

# User applications
exec udiskie
exec wluma
exec kdeconnectd
exec kdeconnect-indicator
#+end_src

** Keybindings - Launch Programs
#+begin_src conf :tangle packages/sway/.config/sway/config
bindsym $mod+Return exec $term
bindsym $mod+Shift+Return exec $term --app-id=floating-foot
bindsym $mod+d exec fuzzel
bindsym $mod+b exec qutebrowser
bindsym $mod+Shift+e exec $term -e yazi
bindsym $mod+n exec emacsclient -c
bindsym $mod+Shift+n exec emacs
bindsym $mod+p exec ~/.local/bin/select-wallpaper.sh
#+end_src

** Keybindings - Window Management
#+begin_src conf :tangle packages/sway/.config/sway/config
bindsym $mod+q kill
bindsym $mod+Shift+Ctrl+f fullscreen toggle
bindsym $mod+Shift+f fullscreen toggle global
bindsym $mod+f floating toggle
bindsym $mod+Tab focus mode_toggle
bindsym $mod+Alt+s sticky toggle

# Layout modes (i3 standard)
bindsym $mod+w layout tabbed
bindsym $mod+s layout stacking
bindsym $mod+e layout toggle split
bindsym $mod+t layout toggle all

# Split directions
bindsym $mod+v split vertical
bindsym $mod+minus split horizontal
#+end_src

** Keybindings - Navigation
#+begin_src conf :tangle packages/sway/.config/sway/config
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right
#+end_src
** Keybindings - Moving Windows
#+begin_src conf :tangle packages/sway/.config/sway/config
# Move window in direction (i3 standard)
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# Move window to output
bindsym $mod+Ctrl+Shift+h move output left
bindsym $mod+Ctrl+Shift+j move output down
bindsym $mod+Ctrl+Shift+k move output up
bindsym $mod+Ctrl+Shift+l move output right
bindsym $mod+Ctrl+Shift+Left move output left
bindsym $mod+Ctrl+Shift+Down move output down
bindsym $mod+Ctrl+Shift+Up move output up
bindsym $mod+Ctrl+Shift+Right move output right
#+end_src

** [X] Keybindings - Moving Windows
#+begin_src conf :tangle no #packages/sway/.config/sway/config
# Swap windows in direction (Hyprland-like behavior)
bindsym $mod+Ctrl+h mark --add _swap, focus left, swap container with mark _swap, unmark _swap, focus left
bindsym $mod+Ctrl+j mark --add _swap, focus down, swap container with mark _swap, unmark _swap, focus down
bindsym $mod+Ctrl+k mark --add _swap, focus up, swap container with mark _swap, unmark _swap, focus up
bindsym $mod+Ctrl+l mark --add _swap, focus right, swap container with mark _swap, unmark _swap, focus right
bindsym $mod+Ctrl+Left mark --add _swap, focus left, swap container with mark _swap, unmark _swap, focus left
bindsym $mod+Ctrl+Down mark --add _swap, focus down, swap container with mark _swap, unmark _swap, focus down
bindsym $mod+Ctrl+Up mark --add _swap, focus up, swap container with mark _swap, unmark _swap, focus up
bindsym $mod+Ctrl+Right mark --add _swap, focus right, swap container with mark _swap, unmark _swap, focus right

# Move window to output
bindsym $mod+Ctrl+Shift+h move output left
bindsym $mod+Ctrl+Shift+j move output down
bindsym $mod+Ctrl+Shift+k move output up
bindsym $mod+Ctrl+Shift+l move output right
bindsym $mod+Ctrl+Shift+Left move output left
bindsym $mod+Ctrl+Shift+Down move output down
bindsym $mod+Ctrl+Shift+Up move output up
bindsym $mod+Ctrl+Shift+Right move output right
#+end_src

** Keybindings - Workspaces
#+begin_src conf :tangle packages/sway/.config/sway/config
# Switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9

# Move to workspace (without switching)
bindsym $mod+Shift+1 move container to workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9

# Move to workspace and switch
bindsym $mod+Ctrl+1 move container to workspace number 1; workspace number 1
bindsym $mod+Ctrl+2 move container to workspace number 2; workspace number 2
bindsym $mod+Ctrl+3 move container to workspace number 3; workspace number 3
bindsym $mod+Ctrl+4 move container to workspace number 4; workspace number 4
bindsym $mod+Ctrl+5 move container to workspace number 5; workspace number 5
bindsym $mod+Ctrl+6 move container to workspace number 6; workspace number 6
bindsym $mod+Ctrl+7 move container to workspace number 7; workspace number 7
bindsym $mod+Ctrl+8 move container to workspace number 8; workspace number 8
bindsym $mod+Ctrl+9 move container to workspace number 9; workspace number 9

# Scratchpad
bindsym $mod+grave scratchpad show
bindsym $mod+Shift+grave move scratchpad
#+end_src

** Keybindings - Hardware
#+begin_src conf :tangle packages/sway/.config/sway/config
bindsym XF86AudioRaiseVolume exec pamixer -i 5
bindsym XF86AudioLowerVolume exec pamixer -d 5
bindsym XF86AudioMute exec pamixer -t
bindsym XF86AudioMicMute exec pamixer --default-source -t

bindsym XF86MonBrightnessUp exec light -A 5
bindsym XF86MonBrightnessDown exec light -U 5

# Screenshot with fuzzel menu
bindsym Print exec ~/.local/bin/screenshot.sh
bindsym $mod+Shift+s exec ~/.local/bin/screenshot.sh

# Quick screenshot (full screen, copy & save)
bindsym Shift+Print exec ~/.local/bin/screenshot.sh screen
bindsym $mod+Shift+Ctrl+s exec ~/.local/bin/screenshot.sh screen
#+end_src

** Keybindings - Notifications
#+begin_src conf :tangle packages/sway/.config/sway/config
bindsym $mod+m exec makoctl invoke
bindsym $mod+Ctrl+m exec makoctl dismiss
bindsym $mod+Shift+m exec makoctl menu fuzzel
#+end_src

** Keybindings - Utilities
#+begin_src conf :tangle packages/sway/.config/sway/config
bindsym $mod+Shift+v exec cliphist list | fuzzel --dmenu | cliphist decode | wl-copy
#+end_src

** Keybindings - Resizing
#+begin_src conf :tangle packages/sway/.config/sway/config
# Resize mode (use Mod+r to enter)
mode "resize" {
    bindsym h resize shrink width 15px
    bindsym j resize grow height 15px
    bindsym k resize shrink height 15px
    bindsym l resize grow width 15px

    bindsym Left resize shrink width 15px
    bindsym Down resize grow height 15px
    bindsym Up resize shrink height 15px
    bindsym Right resize grow width 15px

    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"
#+end_src

** Keybindings - Gestures
#+begin_src conf :tangle packages/sway/.config/sway/config
# Workspace navigation
bindgesture swipe:3:right workspace prev
bindgesture swipe:3:left workspace next

# Scratchpad (down gesture)
bindgesture swipe:3:down scratchpad show
#+end_src

** Keybindings - System
#+begin_src conf :tangle packages/sway/.config/sway/config
bindsym $mod+Shift+c reload; exec sh -c 'pkill waybar; pkill mako; sleep 0.2; waybar & mako & notify-send "Sway" "Configuration reloaded successfully" -u low'
bindsym $mod+Shift+q exec swaynag -t warning -m 'Exit sway?' -B 'Yes' 'swaymsg exit'
#+end_src

** Lid Switch
#+begin_src conf :tangle packages/sway/.config/sway/config
# Lid close: turn off screen, lock, and sleep
bindswitch --reload --locked lid:on exec 'swaymsg "output * dpms off" && swaylock && systemctl suspend'

# Lid open: wake screen
bindswitch --reload --locked lid:off exec 'swaymsg "output * dpms on"'
#+end_src

* Hyprland

** Variables
#+begin_src conf :tangle packages/hyprland/.config/hypr/hyprland.conf
# Hyprland Configuration
# See https://wiki.hypr.land/ for more

$mainMod = SUPER
$terminal = foot
$menu = fuzzel
$browser = qutebrowser
$fileManager = foot -e yazi
#+end_src

** Source Matugen Colors
#+begin_src conf :tangle packages/hyprland/.config/hypr/hyprland.conf
# Source Material You colors from matugen
source = ~/.cache/matugen/colors-hyprland.conf
#+end_src

** Monitor Configuration
#+begin_src conf :tangle packages/hyprland/.config/hypr/hyprland.conf
# Monitor configuration
monitor = eDP-1, 1920x1080@60, 0x0, 1
#+end_src

** Auto-start Programs
#+begin_src conf :tangle packages/hyprland/.config/hypr/hyprland.conf
# Execute on launch
exec-once = waybar
exec-once = mako
exec-once = hyprpaper
exec-once = hypridle
exec-once = fcitx5
exec-once = light -N 5
exec-once = hyprsunset -l 51.5 -L 0.1
exec-once = udiskie
exec-once = wluma
exec-once = kdeconnectd
exec-once = kdeconnect-indicator
exec-once = hyprpolkitagent
exec-once = wl-paste --type text --watch cliphist store
exec-once = wl-paste --type image --watch cliphist store
#+end_src

** Environment Variables
#+begin_src conf :tangle packages/hyprland/.config/hypr/hyprland.conf
# Environment variables
env = XCURSOR_SIZE,24
env = HYPRCURSOR_SIZE,24
#+end_src

** Input Configuration
#+begin_src conf :tangle packages/hyprland/.config/hypr/hyprland.conf
input {
    kb_layout = us
    kb_options = ctrl:swapcaps

    follow_mouse = 1
    float_switch_override_focus = 1

    touchpad {
        natural_scroll = true
        scroll_factor = 0.7
        middle_button_emulation = true
        disable_while_typing = true
    }

    sensitivity = 0
}

gestures {
    workspace_swipe = true
    workspace_swipe_fingers = 3
}
#+end_src

** General Settings
#+begin_src conf :tangle packages/hyprland/.config/hypr/hyprland.conf
general {
    gaps_in = 5
    gaps_out = 0
    border_size = 3

    # Colors will be set by matugen
    col.active_border = $primary
    col.inactive_border = $surface_dim

    layout = dwindle
    allow_tearing = false
}
#+end_src

** Decoration
#+begin_src conf :tangle packages/hyprland/.config/hypr/hyprland.conf
decoration {
    rounding = 0

    active_opacity = 1.0
    inactive_opacity = 1.0

    drop_shadow = false
    shadow_range = 4
    shadow_render_power = 3
    col.shadow = rgba(1a1a1aee)

    blur {
        enabled = false
    }
}
#+end_src

** Animations (Minimal/Fast)
#+begin_src conf :tangle packages/hyprland/.config/hypr/hyprland.conf
animations {
    enabled = true

    # Fast bezier curve for minimal animations
    bezier = fastCurve, 0.4, 0.0, 0.2, 1.0

    animation = windows, 1, 3, fastCurve
    animation = windowsOut, 1, 3, fastCurve, popin 90%
    animation = border, 1, 5, default
    animation = fade, 1, 3, default
    animation = workspaces, 1, 3, fastCurve, slide
}
#+end_src

** Layouts
#+begin_src conf :tangle packages/hyprland/.config/hypr/hyprland.conf
dwindle {
    pseudotile = true
    preserve_split = true
    smart_split = false
    smart_resizing = true
}

master {
    new_status = master
}
#+end_src

** Misc Settings
#+begin_src conf :tangle packages/hyprland/.config/hypr/hyprland.conf
misc {
    force_default_wallpaper = 0
    disable_hyprland_logo = true
    disable_splash_rendering = true
    mouse_move_enables_dpms = true
    key_press_enables_dpms = true
    vrr = 0
}
#+end_src

** Window Rules
#+begin_src conf :tangle packages/hyprland/.config/hypr/hyprland.conf
# Floating scratchpad terminal
windowrulev2 = float, class:(floating-foot)
windowrulev2 = size 50% 50%, class:(floating-foot)
windowrulev2 = center, class:(floating-foot)
windowrulev2 = workspace special:scratchpad silent, class:(floating-foot)

# Picture-in-Picture
windowrulev2 = float, title:^(Picture-in-Picture)$
windowrulev2 = pin, title:^(Picture-in-Picture)$
windowrulev2 = move 100%-w-20 100%-h-20, title:^(Picture-in-Picture)$
windowrulev2 = size 25% 25%, title:^(Picture-in-Picture)$
windowrulev2 = noborder, title:^(Picture-in-Picture)$

# Floating windows
windowrulev2 = float, class:(blueman-manager)
windowrulev2 = float, class:(pavucontrol)
windowrulev2 = float, class:(nm-connection-editor)
windowrulev2 = float, class:(kdeconnect.*)
windowrulev2 = float, title:(Volume Control)

# Inhibit idle for fullscreen
windowrulev2 = idleinhibit fullscreen, class:.*

# No focus stealing
windowrulev2 = noinitialfocus, class:(mako)
windowrulev2 = noinitialfocus, title:^(Picture-in-Picture)$
#+end_src

** Keybindings - Applications
#+begin_src conf :tangle packages/hyprland/.config/hypr/hyprland.conf
# Applications
bind = $mainMod, Return, exec, $terminal
bind = $mainMod SHIFT, Return, exec, $terminal --app-id=floating-foot
bind = $mainMod, D, exec, $menu
bind = $mainMod, B, exec, $browser
bind = $mainMod SHIFT, E, exec, $fileManager
bind = $mainMod, N, exec, emacsclient -c
bind = $mainMod SHIFT, N, exec, emacs
bind = $mainMod, P, exec, ~/.local/bin/select-wallpaper.sh
#+end_src

** Keybindings - Window Management
#+begin_src conf :tangle packages/hyprland/.config/hypr/hyprland.conf
# Window management
bind = $mainMod, Q, killactive
bind = $mainMod SHIFT CTRL, F, fullscreen, 0
bind = $mainMod SHIFT, F, fullscreen, 1
bind = $mainMod, F, togglefloating
bind = $mainMod, Tab, focuscurrentorlast
bind = $mainMod ALT, S, pin

# Layout modes
bind = $mainMod, W, togglegroup
bind = $mainMod, S, changegroupactive, f
bind = $mainMod, E, togglesplit
bind = $mainMod, T, cyclenext

# Pseudo-tiling
bind = $mainMod, P, pseudo
#+end_src

** Keybindings - Navigation
#+begin_src conf :tangle packages/hyprland/.config/hypr/hyprland.conf
# Focus windows
bind = $mainMod, H, movefocus, l
bind = $mainMod, J, movefocus, d
bind = $mainMod, K, movefocus, u
bind = $mainMod, L, movefocus, r
bind = $mainMod, Left, movefocus, l
bind = $mainMod, Down, movefocus, d
bind = $mainMod, Up, movefocus, u
bind = $mainMod, Right, movefocus, r
#+end_src

** Keybindings - Moving Windows
#+begin_src conf :tangle packages/hyprland/.config/hypr/hyprland.conf
# Move windows
bind = $mainMod SHIFT, H, movewindow, l
bind = $mainMod SHIFT, J, movewindow, d
bind = $mainMod SHIFT, K, movewindow, u
bind = $mainMod SHIFT, L, movewindow, r
bind = $mainMod SHIFT, Left, movewindow, l
bind = $mainMod SHIFT, Down, movewindow, d
bind = $mainMod SHIFT, Up, movewindow, u
bind = $mainMod SHIFT, Right, movewindow, r

# Move window to output
bind = $mainMod CTRL SHIFT, H, movewindow, mon:l
bind = $mainMod CTRL SHIFT, J, movewindow, mon:d
bind = $mainMod CTRL SHIFT, K, movewindow, mon:u
bind = $mainMod CTRL SHIFT, L, movewindow, mon:r
#+end_src

** Keybindings - Workspaces
#+begin_src conf :tangle packages/hyprland/.config/hypr/hyprland.conf
# Switch workspaces
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9

# Move to workspace (without switching)
bind = $mainMod SHIFT, 1, movetoworkspacesilent, 1
bind = $mainMod SHIFT, 2, movetoworkspacesilent, 2
bind = $mainMod SHIFT, 3, movetoworkspacesilent, 3
bind = $mainMod SHIFT, 4, movetoworkspacesilent, 4
bind = $mainMod SHIFT, 5, movetoworkspacesilent, 5
bind = $mainMod SHIFT, 6, movetoworkspacesilent, 6
bind = $mainMod SHIFT, 7, movetoworkspacesilent, 7
bind = $mainMod SHIFT, 8, movetoworkspacesilent, 8
bind = $mainMod SHIFT, 9, movetoworkspacesilent, 9

# Move to workspace and switch
bind = $mainMod CTRL, 1, movetoworkspace, 1
bind = $mainMod CTRL, 2, movetoworkspace, 2
bind = $mainMod CTRL, 3, movetoworkspace, 3
bind = $mainMod CTRL, 4, movetoworkspace, 4
bind = $mainMod CTRL, 5, movetoworkspace, 5
bind = $mainMod CTRL, 6, movetoworkspace, 6
bind = $mainMod CTRL, 7, movetoworkspace, 7
bind = $mainMod CTRL, 8, movetoworkspace, 8
bind = $mainMod CTRL, 9, movetoworkspace, 9

# Special workspace (scratchpad replacement)
bind = $mainMod, grave, togglespecialworkspace, scratchpad
bind = $mainMod SHIFT, grave, movetoworkspace, special:scratchpad
#+end_src

** Keybindings - Hardware
#+begin_src conf :tangle packages/hyprland/.config/hypr/hyprland.conf
# Volume controls
bind = , XF86AudioRaiseVolume, exec, pamixer -i 5
bind = , XF86AudioLowerVolume, exec, pamixer -d 5
bind = , XF86AudioMute, exec, pamixer -t
bind = , XF86AudioMicMute, exec, pamixer --default-source -t

# Brightness controls
bind = , XF86MonBrightnessUp, exec, light -A 5
bind = , XF86MonBrightnessDown, exec, light -U 5

# Screenshots
bind = , Print, exec, ~/.local/bin/screenshot.sh
bind = $mainMod SHIFT, S, exec, ~/.local/bin/screenshot.sh
bind = SHIFT, Print, exec, ~/.local/bin/screenshot.sh screen
bind = $mainMod SHIFT CTRL, S, exec, ~/.local/bin/screenshot.sh screen
#+end_src

** Keybindings - Utilities
#+begin_src conf :tangle packages/hyprland/.config/hypr/hyprland.conf
# Notifications
bind = $mainMod, M, exec, makoctl invoke
bind = $mainMod CTRL, M, exec, makoctl dismiss
bind = $mainMod SHIFT, M, exec, makoctl menu fuzzel

# Clipboard manager
bind = $mainMod SHIFT, V, exec, cliphist list | fuzzel --dmenu | cliphist decode | wl-copy
#+end_src

** Keybindings - Resizing
#+begin_src conf :tangle packages/hyprland/.config/hypr/hyprland.conf
# Resize mode
bind = $mainMod, R, submap, resize
submap = resize

binde = , H, resizeactive, -15 0
binde = , J, resizeactive, 0 15
binde = , K, resizeactive, 0 -15
binde = , L, resizeactive, 15 0
binde = , Left, resizeactive, -15 0
binde = , Down, resizeactive, 0 15
binde = , Up, resizeactive, 0 -15
binde = , Right, resizeactive, 15 0

bind = , Return, submap, reset
bind = , Escape, submap, reset

submap = reset
#+end_src

** Keybindings - System
#+begin_src conf :tangle packages/hyprland/.config/hypr/hyprland.conf
# System controls
bind = $mainMod SHIFT, C, exec, hyprctl reload && pkill waybar && pkill mako && sleep 0.2 && waybar & mako & notify-send "Hyprland" "Configuration reloaded successfully" -u low
bind = $mainMod SHIFT, Q, exit
#+end_src

** Mouse Bindings
#+begin_src conf :tangle packages/hyprland/.config/hypr/hyprland.conf
# Mouse bindings
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow
#+end_src

** Lid Switch
#+begin_src conf :tangle packages/hyprland/.config/hypr/hyprland.conf
# Lid switch handled by hypridle
#+end_src

* Hyprpaper
#+begin_src conf :tangle packages/hyprland/.config/hypr/hyprpaper.conf
# Hyprpaper Configuration
# Wallpaper daemon for Hyprland

preload = <<wallpaper>>
wallpaper = , <<wallpaper>>

splash = false
ipc = on
#+end_src

* Hypridle
#+begin_src conf :tangle packages/hyprland/.config/hypr/hypridle.conf
# Hypridle Configuration
# Idle management daemon for Hyprland

general {
    lock_cmd = pidof hyprlock || hyprlock
    before_sleep_cmd = loginctl lock-session
    after_sleep_cmd = hyprctl dispatch dpms on
    ignore_dbus_inhibit = false
}

# Screen off (5 minutes on battery, 10 minutes on AC)
listener {
    timeout = 300
    on-timeout = hyprctl dispatch dpms off
    on-resume = hyprctl dispatch dpms on
}

# Lock screen (10 minutes on battery, 15 minutes on AC)
listener {
    timeout = 600
    on-timeout = loginctl lock-session
}

# Suspend (30 minutes on battery, 60 minutes on AC)
listener {
    timeout = 1800
    on-timeout = systemctl suspend
}
#+end_src

* Hyprlock
#+begin_src conf :tangle packages/hyprland/.config/hypr/hyprlock.conf
# Hyprlock Configuration
# Screen lock for Hyprland

# Source Material You colors
source = ~/.cache/matugen/colors-hyprlock.conf

general {
    disable_loading_bar = false
    hide_cursor = true
    grace = 0
    no_fade_in = false
    no_fade_out = false
    ignore_empty_input = false
    immediate_render = false
}

background {
    monitor =
    path = <<wallpaper>>
    blur_passes = 3
    blur_size = 5
    noise = 0.0117
    contrast = 0.8916
    brightness = 0.8172
    vibrancy = 0.1696
    vibrancy_darkness = 0.0
}

input-field {
    monitor =
    size = 300, 60
    outline_thickness = 2
    dots_size = 0.2
    dots_spacing = 0.35
    dots_center = true
    dots_rounding = -1

    outer_color = $primary
    inner_color = $surface
    font_color = $on_surface

    fade_on_empty = false
    fade_timeout = 2000

    placeholder_text = <span foreground="##$on_surface_variant">Enter Password...</span>
    hide_input = false

    rounding = 0
    check_color = $tertiary
    fail_color = $error
    fail_text = <span foreground="##$on_error">Authentication Failed</span>

    position = 0, -120
    halign = center
    valign = center
}

label {
    monitor =
    text = cmd[update:1000] echo "$(date +"%H:%M")"
    color = $on_surface
    font_size = 72
    font_family = <<font>>

    position = 0, 80
    halign = center
    valign = center
}

label {
    monitor =
    text = cmd[update:1000] echo "$(date +"%A, %B %d")"
    color = $on_surface_variant
    font_size = 20
    font_family = <<font>>

    position = 0, 20
    halign = center
    valign = center
}

label {
    monitor =
    text = $USER
    color = $on_surface
    font_size = 18
    font_family = <<font>>

    position = 0, -180
    halign = center
    valign = center
}
#+end_src

* Waybar

** Configuration
#+begin_src json :tangle packages/waybar/.config/waybar/config
{
  "layer": "top",
  "position": "top",
  "height": 5,
  "spacing": 5,
  "margin-top": 0,
  "margin-bottom": 0,
  "margin-left": 0,
  "margin-right": 0,

  "modules-left": [
    "hyprland/submap",
    "idle_inhibitor",
    "hyprland/workspaces",
    "tray"
  ],

  "modules-center": [
    "hyprland/window"
  ],

  "modules-right": [
    "privacy",
    "pulseaudio",
    "backlight",
    "battery",
    "battery#bat2",
    "clock"
  ],

  "hyprland/submap": {
    "format": "{}",
    "tooltip": false
  },

  "hyprland/window": {
    "format": "[ {} ]",
    "max-length": 80,
    "separate-outputs": true
  },

  "hyprland/workspaces": {
    "format": "{id}",
    "on-click": "activate",
    "disable-scroll": false,
    "all-outputs": false,
    "persistent-workspaces": {
      "1": [],
      "2": [],
      "3": [],
      "4": [],
      "5": [],
      "6": [],
      "7": [],
      "8": [],
      "9": []
    }
  },

  "clock": {
    "format": "{:%Y-%m-%d  [ %H:%M ]}",
    "tooltip-format": "<tt>{calendar}</tt>",
    "calendar": {
      "mode": "month",
      "mode-mon-col": 3,
      "weeks-pos": "left",
      "on-scroll": 1,
      "on-click-right": "mode",
      "format": {
        "months": "<span color='#f7768e'><b>{}</b></span>",
        "days": "<span color='#c0caf5'><b>{}</b></span>",
        "weeks": "<span color='#9ece6a'>W{}</span>",
        "weekdays": "<span color='#7aa2f7'>{}</span>",
        "today": "<span color='#ff9e64'><b><u>{}</u></b></span>"
      }
    },
    "actions": {
      "on-click-right": "mode",
      "on-scroll-up": "shift_up",
      "on-scroll-down": "shift_down"
    }
  },

  "privacy": {
    "icon-size": 12
  },

  "pulseaudio": {
    "format": "V = {volume}  |",
    "format-muted": "[M]  |",
    "format-bluetooth": "[BT] = {volume}  |",
    "on-click": "pavucontrol"
  },

  "backlight": {
    "format": "L = {percent}  |"
  },

  "tray": {
    "icon-size": 14,
    "spacing": 15
  },

  "idle_inhibitor": {
    "format": "{icon}",
    "format-icons": {
      "activated": "[ ON ]",
      "deactivated": "[ OFF ]"
    },
    "tooltip-format-activated": "Keep Screen On: {status}",
    "tooltip-format-deactivated": "Keep Screen On: {status}"
  },

  "battery": {
    "bat": "BAT0",
    "format": "B = {capacity}",
    "states": {
      "warning": 25,
      "critical": 15
    }
  },

  "battery#bat2": {
    "bat": "BAT1",
    "format": "+ {capacity}  |",
    "states": {
      "warning": 25,
      "critical": 15
    }
  }
}
#+end_src

** Styling
#+begin_src css :tangle packages/waybar/.config/waybar/style.css
,* {
  border: none;
  font-family: <<font>>;
  font-weight: Bold;
  font-size: 14px;
  border-radius: 0;
}

@import url("/home/james/.cache/matugen/colors-waybar.css");

window#waybar {
  background: @background;
  color: @foreground;
  border: solid 2px @color0;
}

#window {
  padding: 0 200px;
}

window#waybar.empty #window {
  color: transparent;
  background-color: transparent;
}

#tooltip {
  background: @background;
  border: 2px solid @foreground;
  color: @foreground;
}

#tooltip label {
  color: @foreground;
}

#mode {
  padding-left: 12px;
  padding-right: 15px;
  background: @color0;
  color: @foreground;
  border-top: solid 2px;
  border-bottom: solid 2px;
  border-left: solid 2px;
  border-color: @color0;
}

#idle_inhibitor {
  padding-left: 5px;
  padding-right: 14px;
  background-color: @color0;
  color: @foreground;
  border-top: solid 2px;
  border-bottom: solid 2px;
  border-left: solid 2px;
  border-color: @color0;
}

#workspaces {
  background-color: @color0;
  border-top: solid 2px;
  border-bottom: solid 2px;
  border-color: @color0;
}

#workspaces button {
  min-width: 25px;
  padding: 0 3px;
  background-color: @color0;
  color: @foreground;
}

#workspaces button.focused {
  background: @foreground;
  color: @background;
}

#workspaces button.urgent {
  background: @color1;
  color: @foreground;
}

#scratchpad {
  padding-left: 20px;
  color: @color5;
}

#tray {
  color: @foreground;
  padding-left: 20px;
}

#privacy {
  padding-left: 12px;
}

#pulseaudio {
  padding-right: 20px;
}

#backlight {
  padding-right: 20px;
}

#battery {
  padding-right: 20px;
}

#battery.charging {
  color: @color2;
}

#battery.warning {
  color: @color3;
}

#battery.critical {
  color: @color1;
}

#battery.bat2 {
  margin-left: -12px;
  padding-right: 20px;
}

#clock {
  background-color: @color0;
  color: @foreground;
  padding-right: 5px;
  border-top: solid 2px;
  border-bottom: solid 2px;
  border-right: solid 2px;
  border-color: @color0;
}
#+end_src
* Mako
#+begin_src ini :tangle packages/mako/.config/mako/config
font=<<font>>
border-size=2
default-timeout=5000

# Source matugen colors
include=~/.cache/matugen/colors-mako

# Fallback colors if matugen not run
# background-color=#1a1b26
# text-color=#c0caf5
# border-color=#7aa2f7
#+end_src

* Fuzzel
#+begin_src conf :tangle packages/fuzzel/.config/fuzzel/fuzzel.ini
[main]
# Colour scheme generated by Matugen
include=~/.cache/matugen/colors-fuzzel.ini

font=<<font>>:size=8
use-bold=yes
anchor=top-left
x-margin=10
y-margin=10
width=30
horizontal-pad=10
vertical-pad=10
lines=15
icons-enabled=no
minimal-lines=yes
keyboard-focus=exclusive
exit-on-keyboard-focus-loss=no
prompt= "Launch: "

[border]
width=3
radius=0

[key-bindings]
# Unbind default to avoid conflicts
delete-line-forward=none

# Vim-style navigation
next-with-wrap=Down Control+j
prev-with-wrap=Up Control+k

#+end_src

* Foot
#+begin_src ini :tangle packages/foot/.config/foot/foot.ini
[main]
font=<<font>>:size=12

include=~/.cache/matugen/colors-foot.ini

#+end_src

* Yazi
#+begin_src toml :tangle packages/yazi/.config/yazi/yazi.toml
[manager]
ratio = [1, 4, 3]
#+end_src

** Screenshot Selector Script
#+begin_src bash :tangle packages/sway/.local/bin/screenshot.sh :shebang "#!/usr/bin/env bash"
set -euo pipefail

# Screenshot directory
SCREENSHOT_DIR="$HOME/Pictures/Screenshots"
mkdir -p "$SCREENSHOT_DIR"

# Screenshot filename with timestamp
FILENAME="$SCREENSHOT_DIR/screenshot_$(date +%Y%m%d_%H%M%S).png"

# Function to take screenshot, copy, and save
take_screenshot() {
    local mode=$1

    # Take screenshot based on mode
    if grimshot save "$mode" "$FILENAME"; then
        # Copy to clipboard
        wl-copy < "$FILENAME"

        # Show notification with preview
        notify-send "Screenshot Saved" \
            "Mode: $mode\nFile: $(basename "$FILENAME")\nCopied to clipboard" \
            -i "$FILENAME" \
            -u normal
    else
        notify-send "Screenshot Failed" \
            "Failed to capture $mode" \
            -u critical
    fi
}

# If argument provided, take screenshot directly
if [ $# -gt 0 ]; then
    take_screenshot "$1"
    exit 0
fi

# Show fuzzel menu to select mode
MODE=$(printf "Screen (full)\nArea (selection)\nWindow (active)\nOutput (monitor)" | \
    fuzzel --dmenu --prompt "Screenshot: ")

# Exit if cancelled
if [ -z "$MODE" ]; then
    exit 0
fi

# Map selection to grimshot mode
case "$MODE" in
    "Screen (full)")
        take_screenshot "screen"
        ;;
    "Area (selection)")
        take_screenshot "area"
        ;;
    "Window (active)")
        take_screenshot "active"
        ;;
    "Output (monitor)")
        take_screenshot "output"
        ;;
esac
#+end_src

** Layout Indicator Script
#+begin_src bash :tangle packages/waybar/.local/bin/get-layout.sh :shebang "#!/usr/bin/env bash"
# Get the layout of the parent container of the focused window
# Focused windows themselves have layout "none", so we need to check the parent

TREE=$(swaymsg -t get_tree)

# Find the focused window and get its ID
FOCUSED_ID=$(echo "$TREE" | jq -r '.. | select(.focused? == true) | .id')

# Find the parent container of the focused window
PARENT_LAYOUT=$(echo "$TREE" | jq -r --arg id "$FOCUSED_ID" '
  .. |
  objects |
  select(.nodes[]?.id == ($id | tonumber) or .floating_nodes[]?.id == ($id | tonumber)) |
  .layout
' | grep -v "^null$" | head -1)

# If no parent found, try getting workspace layout
if [ -z "$PARENT_LAYOUT" ] || [ "$PARENT_LAYOUT" = "none" ]; then
    PARENT_LAYOUT=$(echo "$TREE" | jq -r '.. | select(.type? == "workspace" and .focused? == true) | .layout' | head -1)
fi

# Map layout names to symbols
case "$PARENT_LAYOUT" in
    splith) echo "⬌" ;;
    splitv) echo "⬍" ;;
    tabbed) echo "☰" ;;
    stacked) echo "☷" ;;
    *) echo "▪" ;;  # Default symbol for unknown/single window
esac
#+end_src

* Qutebrowser
#+begin_src python :tangle packages/qutebrowser/.config/qutebrowser/config.py
config.load_autoconfig(False)
c.fonts.default_family = "<<font>>"
#+end_src

* Swaylock
#+begin_src conf :tangle packages/swaylock/.config/swaylock/config
color=1a1b26
#+end_src

* Swayidle

** Swayidle Launcher Script
#+begin_src sh :tangle packages/swayidle/.local/bin/start-swayidle.sh :shebang "#!/usr/bin/env bash"
# Kill any existing swayidle instances
pkill swayidle

# Check if on battery or AC
if [ -d /sys/class/power_supply/AC ] || [ -d /sys/class/power_supply/AC0 ] || [ -d /sys/class/power_supply/ACAD ]; then
    # Find the AC adapter
    AC_PATH=$(find /sys/class/power_supply -name 'AC*' -o -name 'ACAD' | head -n 1)

    if [ -n "$AC_PATH" ] && [ "$(cat $AC_PATH/online)" = "0" ]; then
        # On battery
        swayidle -w \
            timeout 300 'swaymsg "output * dpms off"' \
            resume 'swaymsg "output * dpms on"' \
            timeout 600 'swaylock' \
            timeout 1800 'systemctl suspend'
    else
        # Plugged in
        swayidle -w \
            timeout 600 'swaymsg "output * dpms off"' \
            resume 'swaymsg "output * dpms on"' \
            timeout 900 'swaylock' \
            timeout 3600 'systemctl suspend'
    fi
else
    # Fallback if no AC adapter found (desktop)
    swayidle -w \
        timeout 600 'swaymsg "output * dpms off"' \
        resume 'swaymsg "output * dpms on"' \
        timeout 900 'swaylock'
fi
#+end_src

* Zsh

** Zsh Configuration
#+begin_src sh :tangle packages/zsh/.zshrc
# Zsh configuration
HISTFILE=~/.histfile
HISTSIZE=10000
SAVEHIST=10000

# Auto-start WM on TTY1
if [ -z "$WAYLAND_DISPLAY" ] && [ "$XDG_VTNR" -eq 1 ]; then
  exec ~/.local/bin/select-wm.sh sway
fi
#+end_src

** Fastfetch
#+begin_src sh :tangle packages/zsh/.zshrc
# Fastfetch
if [[ -o interactive ]]; then
  fastfetch
fi
#+end_src

** PATH Configuration
#+begin_src sh :tangle packages/zsh/.zshrc
# Doom Emacs
export PATH=/home/james/.config/emacs/bin:$PATH

# NPM
export PATH=/home/james/.npm/bin:$PATH
#+end_src

** Tool Initialization
#+begin_src sh :tangle packages/zsh/.zshrc
# Zoxide - smart directory jumping
eval "$(zoxide init zsh)"
#+end_src

** Functions
#+begin_src sh :tangle packages/zsh/.zshrc
# Yazi - cd on quit
function yy() {
    local tmp="$(mktemp -t "yazi-cwd.XXXXXX")"
    yazi "$@" --cwd-file="$tmp"
    if cwd="$(cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
        cd -- "$cwd"
    fi
    rm -f -- "$tmp"
}
#+end_src

** Aliases
#+begin_src sh :tangle packages/zsh/.zshrc
# Navigation
alias cd="z"

# Safe file operations
alias rm="trash -i"
alias cp="cp -i"
alias mv="mv -i"

# Better defaults
alias cat="bat"
alias neofetch="fastfetch"
alias fetch="fastfetch"

# Quick access
alias zshrc="nvim ~/.zshrc"
alias r="source ~/.zshrc"

# Package management
alias paci="sudo pacman --noconfirm -S"
alias pacr="sudo pacman -Rns"
alias yayi="yay -S"
alias update="sudo pacman --noconfirm -Syyuu && yay --noconfirm -Syyuua"

# System
alias shutdown="shutdown now"
#+end_src

** WM Selector Script
#+begin_src sh :tangle packages/zsh/.local/bin/select-wm.sh :shebang "#!/usr/bin/env sh"
WM="${1:-sway}"

case "$WM" in
  sway|river|niri)
    exec "$WM"
    ;;
  *)
    echo "Unknown WM: $WM"
    exit 1
    ;;
esac
#+end_src

* Matugen

** Configuration
#+begin_src toml :tangle packages/matugen/.config/matugen/config.toml
# Matugen Configuration

[config]
reload_apps = true
reload_apps_list = ["hyprland", "waybar"]
# Use scheme-content for better color generation
scheme_type = "content"

[templates.hyprland]
input_path = "~/.config/matugen/templates/hyprland.conf"
output_path = "~/.cache/matugen/colors-hyprland.conf"

[templates.hyprlock]
input_path = "~/.config/matugen/templates/hyprlock.conf"
output_path = "~/.cache/matugen/colors-hyprlock.conf"

[templates.waybar]
input_path = "~/.config/matugen/templates/waybar.css"
output_path = "~/.cache/matugen/colors-waybar.css"

[templates.foot]
input_path = "~/.config/matugen/templates/foot.ini"
output_path = "~/.cache/matugen/colors-foot.ini"

[templates.mako]
input_path = "~/.config/matugen/templates/mako.conf"
output_path = "~/.cache/matugen/colors-mako"

[templates.fuzzel]
input_path = "~/.config/matugen/templates/fuzzel.ini"
output_path = "~/.cache/matugen/colors-fuzzel.ini"
#+end_src

** Sway Template
#+begin_src conf :tangle packages/matugen/.config/matugen/templates/sway.conf
# Generated by matugen

# Sway color variables
set $bg {{colors.surface.default.hex}}
set $fg {{colors.on_surface.default.hex}}
set $accent {{colors.primary.default.hex}}
set $urgent {{colors.error.default.hex}}

# Material You color palette
set $background {{colors.background.default.hex}}
set $foreground {{colors.on_background.default.hex}}
set $primary {{colors.primary.default.hex}}
set $on_primary {{colors.on_primary.default.hex}}
set $primary_container {{colors.primary_container.default.hex}}
set $on_primary_container {{colors.on_primary_container.default.hex}}
set $secondary {{colors.secondary.default.hex}}
set $on_secondary {{colors.on_secondary.default.hex}}
set $tertiary {{colors.tertiary.default.hex}}
set $surface {{colors.surface.default.hex}}
set $on_surface {{colors.on_surface.default.hex}}
set $surface_variant {{colors.surface_variant.default.hex}}
set $on_surface_variant {{colors.on_surface_variant.default.hex}}
set $surface_dim {{colors.surface_dim.default.hex}}
set $error {{colors.error.default.hex}}
set $on_error {{colors.on_error.default.hex}}
#+end_src

** Hyprland Template
#+begin_src conf :tangle packages/matugen/.config/matugen/templates/hyprland.conf
# Generated by matugen - Hyprland colors

$background = rgb({{colors.background.default.hex_stripped}})
$foreground = rgb({{colors.on_background.default.hex_stripped}})
$primary = rgb({{colors.primary.default.hex_stripped}})
$on_primary = rgb({{colors.on_primary.default.hex_stripped}})
$primary_container = rgb({{colors.primary_container.default.hex_stripped}})
$on_primary_container = rgb({{colors.on_primary_container.default.hex_stripped}})
$secondary = rgb({{colors.secondary.default.hex_stripped}})
$on_secondary = rgb({{colors.on_secondary.default.hex_stripped}})
$tertiary = rgb({{colors.tertiary.default.hex_stripped}})
$surface = rgb({{colors.surface.default.hex_stripped}})
$on_surface = rgb({{colors.on_surface.default.hex_stripped}})
$surface_variant = rgb({{colors.surface_variant.default.hex_stripped}})
$on_surface_variant = rgb({{colors.on_surface_variant.default.hex_stripped}})
$surface_dim = rgb({{colors.surface_dim.default.hex_stripped}})
$error = rgb({{colors.error.default.hex_stripped}})
$on_error = rgb({{colors.on_error.default.hex_stripped}})
#+end_src

** Hyprlock Template
#+begin_src conf :tangle packages/matugen/.config/matugen/templates/hyprlock.conf
# Generated by matugen - Hyprlock colors

$background = {{colors.background.default.hex_stripped}}
$foreground = {{colors.on_background.default.hex_stripped}}
$primary = {{colors.primary.default.hex_stripped}}
$on_primary = {{colors.on_primary.default.hex_stripped}}
$surface = {{colors.surface.default.hex_stripped}}
$on_surface = {{colors.on_surface.default.hex_stripped}}
$surface_variant = {{colors.surface_variant.default.hex_stripped}}
$on_surface_variant = {{colors.on_surface_variant.default.hex_stripped}}
$tertiary = {{colors.tertiary.default.hex_stripped}}
$error = {{colors.error.default.hex_stripped}}
$on_error = {{colors.on_error.default.hex_stripped}}
#+end_src

** Waybar Template
#+begin_src css :tangle packages/matugen/.config/matugen/templates/waybar.css
/* Generated by matugen */

@define-color background {{colors.background.default.hex}};
@define-color foreground {{colors.on_background.default.hex}};
@define-color surface {{colors.surface.default.hex}};
@define-color on_surface {{colors.on_surface.default.hex}};

@define-color primary {{colors.primary.default.hex}};
@define-color on_primary {{colors.on_primary.default.hex}};
@define-color primary_container {{colors.primary_container.default.hex}};
@define-color on_primary_container {{colors.on_primary_container.default.hex}};

@define-color secondary {{colors.secondary.default.hex}};
@define-color on_secondary {{colors.on_secondary.default.hex}};
@define-color secondary_container {{colors.secondary_container.default.hex}};

@define-color tertiary {{colors.tertiary.default.hex}};
@define-color on_tertiary {{colors.on_tertiary.default.hex}};

@define-color error {{colors.error.default.hex}};
@define-color on_error {{colors.on_error.default.hex}};

@define-color outline {{colors.outline.default.hex}};
@define-color surface_variant {{colors.surface_variant.default.hex}};
@define-color on_surface_variant {{colors.on_surface_variant.default.hex}};

/* Legacy color variables for compatibility */
@define-color color0 {{colors.surface.default.hex}};
@define-color color1 {{colors.error.default.hex}};
@define-color color2 {{colors.tertiary.default.hex}};
@define-color color3 {{colors.secondary.default.hex}};
@define-color color4 {{colors.primary.default.hex}};
@define-color color5 {{colors.primary_container.default.hex}};
#+end_src

** Foot Template
#+begin_src ini :tangle packages/matugen/.config/matugen/templates/foot.ini
# Generated by matugen

[colors]
foreground={{colors.on_background.default.hex_stripped}}
background={{colors.background.default.hex_stripped}}

regular0={{colors.surface.default.hex_stripped}}
regular1={{colors.error.default.hex_stripped}}
regular2={{colors.tertiary.default.hex_stripped}}
regular3={{colors.secondary.default.hex_stripped}}
regular4={{colors.primary.default.hex_stripped}}
regular5={{colors.primary_container.default.hex_stripped}}
regular6={{colors.secondary_container.default.hex_stripped}}
regular7={{colors.on_background.default.hex_stripped}}

bright0={{colors.surface_variant.default.hex_stripped}}
bright1={{colors.error.default.hex_stripped}}
bright2={{colors.tertiary.default.hex_stripped}}
bright3={{colors.secondary.default.hex_stripped}}
bright4={{colors.primary.default.hex_stripped}}
bright5={{colors.primary_container.default.hex_stripped}}
bright6={{colors.secondary_container.default.hex_stripped}}
bright7={{colors.on_surface.default.hex_stripped}}
#+end_src

** Mako Template
#+begin_src conf :tangle packages/matugen/.config/matugen/templates/mako.conf
# Generated by matugen

background-color={{colors.surface.default.hex}}
text-color={{colors.on_surface.default.hex}}
border-color={{colors.primary.default.hex}}

[urgency=high]
border-color={{colors.error.default.hex}}
#+end_src

** Fuzzel Template
#+begin_src ini :tangle packages/matugen/.config/matugen/templates/fuzzel.ini
# Generated by matugen

[colors]
background={{colors.surface.default.hex}}ff
text={{colors.on_surface.default.hex}}ff
match={{colors.primary.default.hex}}ff
selection={{colors.primary_container.default.hex}}ff
selection-text={{colors.on_primary_container.default.hex}}ff
selection-match={{colors.primary.default.hex}}ff
border={{colors.outline.default.hex}}ff
#+end_src

** Wallpaper Selector Script
#+begin_src bash :tangle packages/matugen/.local/bin/select-wallpaper.sh :shebang "#!/usr/bin/env bash"
set -euo pipefail

# Wallpaper directory
WALLPAPER_DIR="$HOME/dotfile/wallpapers"

# Check if directory exists
if [ ! -d "$WALLPAPER_DIR" ]; then
    notify-send "Error" "Wallpaper directory not found: $WALLPAPER_DIR" -u critical
    exit 1
fi

# Get list of wallpapers (excluding README)
wallpapers=$(find "$WALLPAPER_DIR" -type f \( -iname "*.jpg" -o -iname "*.png" -o -iname "*.jpeg" \) -exec basename {} \; | sort)

# Check if any wallpapers found
if [ -z "$wallpapers" ]; then
    notify-send "Error" "No wallpapers found in $WALLPAPER_DIR" -u critical
    exit 1
fi

# Select wallpaper using fuzzel
selected_wallpaper=$(echo "$wallpapers" | fuzzel --dmenu --prompt "Select wallpaper: ")

# Exit if cancelled
if [ -z "$selected_wallpaper" ]; then
    exit 0
fi

# Select theme mode
mode=$(printf "dark\nlight" | fuzzel --dmenu --prompt "Select theme: ")

# Exit if cancelled
if [ -z "$mode" ]; then
    exit 0
fi

# Full path to selected wallpaper
wallpaper_path="$WALLPAPER_DIR/$selected_wallpaper"

# Generate colors with matugen
notify-send "Matugen" "Generating $mode theme from $selected_wallpaper..." -u low

if matugen image "$wallpaper_path" -m "$mode"; then
    # Set wallpaper with swaybg
    pkill swaybg || true
    swaybg -i "$wallpaper_path" -m fill &

    # Reload sway
    swaymsg reload

    # Reload waybar and mako explicitly
    pkill waybar || true
    pkill mako || true
    sleep 0.2
    waybar &
    mako &

    notify-send "Theme Applied" "Wallpaper: $selected_wallpaper\nMode: $mode" -u normal
else
    notify-send "Error" "Failed to generate theme" -u critical
    exit 1
fi
#+end_src
