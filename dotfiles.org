#+TITLE: Dotfiles Configuration
#+AUTHOR: James
#+PROPERTY: header-args :mkdirp yes :noweb yes
#+STARTUP: overview

* Shared Configuration

** Colors
#+name: colors
#+begin_src conf
# Define color scheme (can be generated by pywal)
set $bg #1a1b26
set $fg #c0caf5
set $accent #7aa2f7
set $urgent #f7768e
#+end_src

** Variables
#+name: terminal
#+begin_src text
foot
#+end_src

#+name: font
#+begin_src text
JetBrainsMono Nerd Font
#+end_src

#+name: wallpaper
#+begin_src text
~/dotfile/wallpapers/default.jpg
#+end_src

* Sway

** Variables
#+begin_src conf :tangle packages/sway/.config/sway/config
set $mod Mod4
set $term <<terminal>>

# Source pywal colors if available
include $HOME/.cache/wal/colors-sway

# Fallback colors if pywal not run
<<colors>>
#+end_src

** Input Configuration
#+begin_src conf :tangle packages/sway/.config/sway/config
input type:keyboard {
    xkb_layout us
    xkb_options ctrl:swapcaps
}

input type:touchpad {
    tap enabled
    natural_scroll enabled
    scroll_factor 0.7
    accel_profile adaptive
    middle_emulation enabled
    dwt enabled
}

input type:pointer {
    dwt enabled
}
#+end_src

** Output Configuration
#+begin_src conf :tangle packages/sway/.config/sway/config
output eDP-1 mode 1920x1080@60Hz position 0,0
#+end_src

** Appearance
#+begin_src conf :tangle packages/sway/.config/sway/config
gaps inner 10
gaps outer 0

default_border pixel 2
default_floating_border pixel 2

client.focused $accent $accent $bg $accent $accent
client.unfocused $bg $bg $fg $bg $bg
client.urgent $urgent $urgent $fg $urgent $urgent
#+end_src

** Behavior
#+begin_src conf :tangle packages/sway/.config/sway/config
# Focus follows mouse
focus_follows_mouse yes

# Don't focus popup windows
no_focus [window_role="pop-up"]
no_focus [window_type="notification"]
#+end_src

** Window Rules
#+begin_src conf :tangle packages/sway/.config/sway/config
# Picture-in-Picture windows
for_window [title="Picture-in-Picture"] floating enable, border none, move position 10 ppt 10 ppt, sticky enable

# Floating terminal
for_window [app_id="floating-foot"] floating enable, resize set 60 ppt 60 ppt, move position center

# Floating applications
for_window [app_id="blueberry.py"] floating enable
for_window [app_id="blueman-manager"] floating enable
for_window [app_id="pavucontrol"] floating enable
for_window [app_id="fcitx5-config-qt"] floating enable
for_window [class="Bitwarden"] floating enable
for_window [app_id="LanMouse"] floating enable
for_window [app_id="org.kde.kdeconnect.*"] floating enable
for_window [class="prismlauncher"] floating enable
for_window [app_id="nm-connection-editor"] floating enable
#+end_src

** Auto-start
#+begin_src conf :tangle packages/sway/.config/sway/config
# Wayland essentials
exec swaybg -i <<wallpaper>> -m fill
exec mako
exec waybar

# System utilities
exec fcitx5
exec light -N 5
exec wlsunset -l 51.5 -L 0.1
exec ~/.local/bin/start-swayidle.sh

# Tiling enhancements
exec_always autotiling

# Touchpad gestures
exec libinput-gestures

# User applications
exec udiskie
exec wluma
exec kdeconnectd
exec kdeconnect-indicator
#+end_src

** Keybindings - Launch Programs
#+begin_src conf :tangle packages/sway/.config/sway/config
bindsym $mod+Return exec $term
bindsym $mod+Shift+Return exec $term --app-id=floating-foot
bindsym $mod+d exec fuzzel
bindsym $mod+b exec qutebrowser
bindsym $mod+e exec $term -e yazi
bindsym $mod+n exec emacsclient -c
bindsym $mod+Shift+n exec emacs
#+end_src

** Keybindings - Window Management
#+begin_src conf :tangle packages/sway/.config/sway/config
bindsym $mod+q kill
bindsym $mod+Shift+Ctrl+f fullscreen toggle
bindsym $mod+Shift+f fullscreen toggle global
bindsym $mod+f floating toggle
bindsym $mod+Tab focus mode_toggle
bindsym $mod+Ctrl+s sticky toggle
bindsym $mod+Shift+minus splith
bindsym $mod+Shift+v splitv
bindsym $mod+Shift+s layout toggle split
#+end_src

** Keybindings - Navigation
#+begin_src conf :tangle packages/sway/.config/sway/config
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right
#+end_src

** Keybindings - Moving Windows
#+begin_src conf :tangle packages/sway/.config/sway/config
bindsym $mod+Ctrl+h move left
bindsym $mod+Ctrl+j move down
bindsym $mod+Ctrl+k move up
bindsym $mod+Ctrl+l move right
bindsym $mod+Ctrl+Left move left
bindsym $mod+Ctrl+Down move down
bindsym $mod+Ctrl+Up move up
bindsym $mod+Ctrl+Right move right

# Move window to output
bindsym $mod+Ctrl+Shift+h move output left
bindsym $mod+Ctrl+Shift+j move output down
bindsym $mod+Ctrl+Shift+k move output up
bindsym $mod+Ctrl+Shift+l move output right
bindsym $mod+Ctrl+Shift+Left move output left
bindsym $mod+Ctrl+Shift+Down move output down
bindsym $mod+Ctrl+Shift+Up move output up
bindsym $mod+Ctrl+Shift+Right move output right
#+end_src

** Keybindings - Workspaces
#+begin_src conf :tangle packages/sway/.config/sway/config
# Switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9

# Move to workspace (without switching)
bindsym $mod+Shift+1 move container to workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9

# Move to workspace and switch
bindsym $mod+Ctrl+1 move container to workspace number 1; workspace number 1
bindsym $mod+Ctrl+2 move container to workspace number 2; workspace number 2
bindsym $mod+Ctrl+3 move container to workspace number 3; workspace number 3
bindsym $mod+Ctrl+4 move container to workspace number 4; workspace number 4
bindsym $mod+Ctrl+5 move container to workspace number 5; workspace number 5
bindsym $mod+Ctrl+6 move container to workspace number 6; workspace number 6
bindsym $mod+Ctrl+7 move container to workspace number 7; workspace number 7
bindsym $mod+Ctrl+8 move container to workspace number 8; workspace number 8
bindsym $mod+Ctrl+9 move container to workspace number 9; workspace number 9

# Scratchpad
bindsym $mod+w scratchpad show
bindsym $mod+Shift+w move scratchpad
#+end_src

** Keybindings - Hardware
#+begin_src conf :tangle packages/sway/.config/sway/config
bindsym XF86AudioRaiseVolume exec pamixer -i 5
bindsym XF86AudioLowerVolume exec pamixer -d 5
bindsym XF86AudioMute exec pamixer -t
bindsym XF86AudioMicMute exec pamixer --default-source -t

bindsym XF86MonBrightnessUp exec light -A 5
bindsym XF86MonBrightnessDown exec light -U 5

bindsym Print exec grimshot save screen
bindsym Ctrl+Print exec grimshot save output
bindsym Alt+Print exec grimshot save window
#+end_src

** Keybindings - Notifications
#+begin_src conf :tangle packages/sway/.config/sway/config
bindsym $mod+m exec makoctl invoke
bindsym $mod+Ctrl+m exec makoctl dismiss
bindsym $mod+Shift+m exec makoctl menu fuzzel
#+end_src

** Keybindings - Utilities
#+begin_src conf :tangle packages/sway/.config/sway/config
bindsym $mod+v exec cliphist list | fuzzel --dmenu | cliphist decode | wl-copy
#+end_src

** Keybindings - Resize Mode
#+begin_src conf :tangle packages/sway/.config/sway/config
mode "resize" {
    bindsym h resize shrink width 10px
    bindsym j resize grow height 10px
    bindsym k resize shrink height 10px
    bindsym l resize grow width 10px

    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"
#+end_src

** Keybindings - System
#+begin_src conf :tangle packages/sway/.config/sway/config
bindsym $mod+Shift+c reload
bindsym $mod+Shift+e exec swaynag -t warning -m 'Exit sway?' -B 'Yes' 'swaymsg exit'
#+end_src

** Lid Switch
#+begin_src conf :tangle packages/sway/.config/sway/config
# Lid close: turn off screen, lock, and sleep
bindswitch --reload --locked lid:on exec 'swaymsg "output * dpms off" && swaylock && systemctl suspend'

# Lid open: wake screen
bindswitch --reload --locked lid:off exec 'swaymsg "output * dpms on"'
#+end_src

* Waybar
#+begin_src json :tangle packages/waybar/.config/waybar/config
{
  "layer": "top",
  "position": "top",
  "height": 30,
  "modules-left": ["sway/workspaces", "sway/mode"],
  "modules-center": ["clock"],
  "modules-right": ["network", "battery", "pulseaudio"],
  "clock": {
    "format": "{:%Y-%m-%d %H:%M}"
  },
  "battery": {
    "format": "{capacity}% {icon}",
    "format-icons": ["", "", "", "", ""]
  },
  "network": {
    "format-wifi": "{essid} ",
    "format-disconnected": "Disconnected"
  },
  "pulseaudio": {
    "format": "{volume}% {icon}",
    "format-icons": ["", "", ""]
  }
}
#+end_src

* Mako
#+begin_src ini :tangle packages/mako/.config/mako/config
font=<<font>>
background-color=#1a1b26
text-color=#c0caf5
border-color=#7aa2f7
border-size=2
default-timeout=5000
#+end_src

* Fuzzel
#+begin_src ini :tangle packages/fuzzel/.config/fuzzel/fuzzel.ini
[main]
font=<<font>>
#+end_src

* Foot
#+begin_src ini :tangle packages/foot/.config/foot/foot.ini
[main]
font=<<font>>

[colors]
foreground=c0caf5
background=1a1b26
#+end_src

* Yazi
#+begin_src toml :tangle packages/yazi/.config/yazi/yazi.toml
[manager]
ratio = [1, 4, 3]
#+end_src

* Qutebrowser
#+begin_src python :tangle packages/qutebrowser/.config/qutebrowser/config.py
config.load_autoconfig(False)
c.fonts.default_family = "<<font>>"
#+end_src

* Swaylock
#+begin_src conf :tangle packages/swaylock/.config/swaylock/config
color=1a1b26
#+end_src

* Libinput-gestures

** Gesture Configuration
#+begin_src conf :tangle packages/libinput-gestures/.config/libinput-gestures.conf
# Workspace navigation
gesture swipe left 3 swaymsg workspace prev
gesture swipe right 3 swaymsg workspace next

# Window management
gesture swipe up 3 swaymsg fullscreen toggle
gesture swipe down 3 swaymsg scratchpad show

# Move window between workspaces
gesture swipe left 4 swaymsg move container to workspace prev, workspace prev
gesture swipe right 4 swaymsg move container to workspace next, workspace next

# Quick launcher
gesture tap 4 fuzzel
#+end_src

* Swayidle

** Swayidle Launcher Script
#+begin_src sh :tangle packages/swayidle/.local/bin/start-swayidle.sh :shebang "#!/usr/bin/env bash"
# Kill any existing swayidle instances
pkill swayidle

# Check if on battery or AC
if [ -d /sys/class/power_supply/AC ] || [ -d /sys/class/power_supply/AC0 ] || [ -d /sys/class/power_supply/ACAD ]; then
    # Find the AC adapter
    AC_PATH=$(find /sys/class/power_supply -name 'AC*' -o -name 'ACAD' | head -n 1)

    if [ -n "$AC_PATH" ] && [ "$(cat $AC_PATH/online)" = "0" ]; then
        # On battery
        swayidle -w \
            timeout 300 'swaymsg "output * dpms off"' \
            resume 'swaymsg "output * dpms on"' \
            timeout 600 'swaylock' \
            timeout 1800 'systemctl suspend'
    else
        # Plugged in
        swayidle -w \
            timeout 600 'swaymsg "output * dpms off"' \
            resume 'swaymsg "output * dpms on"' \
            timeout 900 'swaylock' \
            timeout 3600 'systemctl suspend'
    fi
else
    # Fallback if no AC adapter found (desktop)
    swayidle -w \
        timeout 600 'swaymsg "output * dpms off"' \
        resume 'swaymsg "output * dpms on"' \
        timeout 900 'swaylock'
fi
#+end_src

* Zsh

** Zsh Configuration
#+begin_src sh :tangle packages/zsh/.zshrc
# Zsh configuration
HISTFILE=~/.histfile
HISTSIZE=10000
SAVEHIST=10000

# Auto-start WM on TTY1
if [ -z "$WAYLAND_DISPLAY" ] && [ "$XDG_VTNR" -eq 1 ]; then
  exec ~/.local/bin/select-wm.sh sway
fi
#+end_src

** Fastfetch
#+begin_src sh :tangle packages/zsh/.zshrc
# Fastfetch
if [[ -o interactive ]]; then
  fastfetch
fi
#+end_src

** PATH Configuration
#+begin_src sh :tangle packages/zsh/.zshrc
# Doom Emacs
export PATH=/home/james/.config/emacs/bin:$PATH

# NPM
export PATH=/home/james/.npm/bin:$PATH
#+end_src

** Tool Initialization
#+begin_src sh :tangle packages/zsh/.zshrc
# Zoxide - smart directory jumping
eval "$(zoxide init zsh)"
#+end_src

** Functions
#+begin_src sh :tangle packages/zsh/.zshrc
# Yazi - cd on quit
function yy() {
    local tmp="$(mktemp -t "yazi-cwd.XXXXXX")"
    yazi "$@" --cwd-file="$tmp"
    if cwd="$(cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
        cd -- "$cwd"
    fi
    rm -f -- "$tmp"
}
#+end_src

** Aliases
#+begin_src sh :tangle packages/zsh/.zshrc
# Navigation
alias cd="z"

# Safe file operations
alias rm="trash -i"
alias cp="cp -i"
alias mv="mv -i"

# Better defaults
alias cat="bat"
alias neofetch="fastfetch"
alias fetch="fastfetch"

# Quick access
alias zshrc="nvim ~/.zshrc"
alias r="source ~/.zshrc"

# Package management
alias paci="sudo pacman --noconfirm -S"
alias pacr="sudo pacman -Rns"
alias yayi="yay -S"
alias update="sudo pacman --noconfirm -Syyuu && yay --noconfirm -Syyuua"

# System
alias shutdown="shutdown now"
#+end_src

** WM Selector Script
#+begin_src sh :tangle packages/zsh/.local/bin/select-wm.sh :shebang "#!/usr/bin/env sh"
WM="${1:-sway}"

case "$WM" in
  sway|river|niri)
    exec "$WM"
    ;;
  *)
    echo "Unknown WM: $WM"
    exit 1
    ;;
esac
#+end_src

* Pywal
#+begin_src conf :tangle packages/pywal/.config/wal/templates/colors-sway.conf
# Generated by pywal
set $wallpaper {wallpaper}
set $background {background}
set $foreground {foreground}
set $color0 {color0}
set $color1 {color1}
set $color2 {color2}
set $color3 {color3}
set $color4 {color4}
set $color5 {color5}
set $color6 {color6}
set $color7 {color7}
#+end_src
